package org.example;

import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.Pane;
import javafx.scene.paint.Color;
import javafx.scene.shape.Circle;
import javafx.scene.shape.Line;
import javafx.stage.Stage;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;

public class Procedural extends Application  {
    private List<Circle> nodes;
    private List<Point> points;
    private List<Line> lines;
    private double speedX;
    private double speedY;
    private double theta;


    private Pane root;



    @Override
    public void start(Stage primaryStage) {
        root = new Pane();
        Circle player;
        Circle follow;
        Circle follow2;

        Line line;
        Line line2;
        player = new Circle(200, 200, 20, Color.BLUE);
        follow = new Circle(50, 50, 20, Color.RED);
        follow2 = new Circle(20, 20, 20, Color.RED);

        Point p1 = new Point(player.getCenterX(), player.getCenterY());
        Point p2 = new Point(follow.getCenterX(), follow.getCenterY());
        Point p3 = new Point(follow2.getCenterX(), follow2.getCenterY());

        Vector vector = new Vector(p1, p2);
        Vector vector2 = new Vector(p2, p3);

        line = new Line(player.getCenterX(), player.getCenterY(), player.getCenterX() + vector.get(0), player.getCenterY() + vector.get(1));
        line2 = new Line(player.getCenterX(), player.getCenterY(), player.getCenterX() + vector2.get(0), player.getCenterY() + vector2.get(1));

        nodes = new ArrayList<>();
        lines = new ArrayList<>();
        points = new ArrayList<>();

        int amount = 50;

        for(int i = 0; i < amount; i++){
            Random random = new Random();
            int step = 255 / amount;


            // Circle newCircle = new Circle(50, 50, random.nextDouble(i*5,i*5 + 5), Color.BLUE);
            // Circle newCircle = new Circle(50, 50, (amount-i), Color.rgb((amount-i)*step, (amount-i)*step , (amount-i)*step));
            Circle newCircle = new Circle(200, 200, Math.sin(i / 20.0) * 20 + 5, Color.rgb((amount-i)*step, (amount-i)*step , (amount-i)*step));

            Line newLine = new Line(0, 0, 0, 0);
            Point newPoint = new Point(0,0);
            nodes.add(newCircle);
            lines.add(newLine);
            points.add(newPoint);
        }


        root.getChildren().addAll(nodes);
        // root.getChildren().addAll(lines);

        Scene scene = new Scene(root, 600, 400);

        // Set mouse movement event
        scene.setOnMouseMoved(this::handleMouseMovement);

        primaryStage.setTitle("Mouse Follow Example");
        primaryStage.setScene(scene);
        primaryStage.show();
    }

    private void handleMouseMovement(MouseEvent event) {
        nodes.getFirst().setCenterX(event.getX() - nodes.getFirst().getRadius() / 2);
        nodes.getFirst().setCenterY(event.getY() - nodes.getFirst().getRadius() / 2);



        for(int i = nodes.toArray().length - 1; i > 0; i--){

            Point p1 = new Point(nodes.get(i-1).getCenterX(), nodes.get(i-1).getCenterY());
            Point p2 = new Point(nodes.get(i).getCenterX(), nodes.get(i).getCenterY());

            Vector vector = new Vector(p1, p2);
            // double factor = 50.0 / vector.getLength();
            double factor = (nodes.get(i-1).getRadius() / 4) / Math.max(vector.getLength(), 1);

            vector.scale(factor);

            lines.get(i-1).setStartX(nodes.get(i-1).getCenterX());
            lines.get(i-1).setStartY(nodes.get(i-1).getCenterY());
            lines.get(i-1).setEndX(nodes.get(i-1).getCenterX() + vector.get(0));
            lines.get(i-1).setEndY(nodes.get(i-1).getCenterY() + vector.get(1));


            nodes.get(i).setCenterX(nodes.get(i-1).getCenterX() + vector.get(0));
            nodes.get(i).setCenterY(nodes.get(i-1).getCenterY() + vector.get(1));
        }

        /*
        // Update player's position to follow the mouse
        player.setCenterX(event.getX() - player.getRadius() / 2);
        player.setCenterY(event.getY() - player.getRadius() / 2);
        Point p1 = new Point(player.getCenterX(), player.getCenterY());
        Point p2 = new Point(follow.getCenterX(), follow.getCenterY());

        Vector vector = new Vector(p1, p2);
        double factor = 100.0 / vector.getLength();
        vector.scale(factor);

        line.setStartX(player.getCenterX());
        line.setStartY(player.getCenterY());
        line.setEndX(player.getCenterX() + vector.get(0));
        line.setEndY(player.getCenterY() + vector.get(1));




        Point p3 = new Point(follow2.getCenterX(), follow2.getCenterY());


        Vector vector2 = new Vector(p2, p3);
        double factor2 = 100.0 / vector2.getLength();
        System.out.println(factor2);

        vector2.scale(factor2);

        line2.setStartX(follow.getCenterX());
        line2.setStartY(follow.getCenterY());
        line2.setEndX(follow.getCenterX() + vector2.get(0));
        line2.setEndY(follow.getCenterY() + vector2.get(1));

        follow2.setCenterX(follow.getCenterX() + vector2.get(0));
        follow2.setCenterY(follow.getCenterY() + vector2.get(1));
        follow.setCenterX(player.getCenterX() + vector.get(0));
        follow.setCenterY(player.getCenterY() + vector.get(1));
        */
    }

    public static void main(String[] args) {
        launch(args);
    }
}
